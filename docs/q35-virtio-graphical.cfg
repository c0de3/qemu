# q35 - VirtIO guest (graphical console)
# =========================================================
#
# Usage:
#
#   $ qemu-system-x86_64 \
#     -nodefaults \
#     -readconfig q35-virtio-common.cfg \
#     -readconfig q35-virtio-graphical.cfg \
#     -device scsi-hd,bus=scsi.0,drive=disk \
#     -drive file=os.qcow2,format=qcow2,id=disk,if=none
#
# Or:
#
#   $ qemu-system-x86_64 \
#     -nodefaults \
#     -readconfig q35-virtio-common.cfg \
#     -readconfig q35-virtio-graphical.cfg \
#     -cdrom live.iso
#
# ---------------------------------------------------------
#
# This file contains a working configuration that can be
# used for booting a generic q35 guest without too much
# fuss, or as a starting point for a more fine-tuned
# configuration. The guest in question will be accessed
# using a graphical console.
#
# Using -nodefaults is required to avoid duplicated
# devices and conflicting address assignments; all devices
# that are added by this file are explained in detail
# below.


# SCSI controller
# =========================================================
#
# We use virtio-scsi here so that we can (hot)plug a large
# number of disks without running into issues. QEMU will
# automatically plug any guest disk into this controller.

[device "scsi"]
  driver = "virtio-scsi-pci"
  bus = "pci.1"
  addr = "0x0"


# Network interface
# =========================================================
#
# We use virtio-net for improved performance over emulated
# hardware; on the host side, we take advantage of user
# networking so that the QEMU process doesn't require any
# additional privileges.

[netdev "hostnet"]
  type = "user"

[device "net"]
  driver = "virtio-net-pci"
  netdev = "hostnet"
  bus = "pci.2"
  addr = "0x0"


# USB controller and input devices
# =========================================================
#
# We add a virtualization-friendly USB 3.0 controller and
# a USB tablet so that graphical guests can be controlled
# appropriately. A USB keyboard is not needed, as q35
# guests get a PS/2 one added automatically.

[device "usb"]
  driver = "nec-usb-xhci"
  bus = "pci.3"
  addr = "0x0"

[device "tablet"]
  driver = "usb-tablet"
  bus = "usb.0"
  port = "2"


# Video card
# =========================================================
#
# We plug the QXL video card directly into the PCIe Root
# Bus as it is a legacy PCI device; this way, we can reduce
# the number of PCIe controllers in the guest.

[device "video"]
  driver = "qxl-vga"
  bus = "pcie.0"
  addr = "0x1"


# Sound card
# =========================================================
#
# Like the video card, the sound card is a legacy PCI
# device and as such can be plugged directly into the PCIe
# Root Bus.

[device "sound"]
  driver = "ich9-intel-hda"
  bus = "pcie.0"
  addr = "1b.0"

[device "duplex"]
  driver = "hda-duplex"
  bus = "sound.0"
  cad = "0"
