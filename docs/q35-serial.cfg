# q35 guest - sample configuration (serial console)
# =========================================================
#
# Usage:
#
#   $ qemu-system-x86_64 \
#     -nographic -nodefaults \
#     -readconfig q35-serial.cfg \
#     -drive file=q35.qcow2,format=qcow2
#
# ---------------------------------------------------------
#
# This file contains a working configuration that can be
# used for booting a generic q35 guest without too much
# fuss, or as a starting point for a more fine-tuned
# configuration. The guest in question will be accessed
# using the serial console.
#
# Using -nodefaults is required to avoid duplicated
# devices and conflicting address assignments; all devices
# that are added by this file are explained in detail
# below.


# Machine options
# =========================================================
#
# We use the q35 machine type and enable KVM acceleration
# for better performance.

[machine]
  type = "q35"
  accel = "kvm"


# PCIe controllers
# =========================================================
#
# We create three PCIe Root Ports: the first two are used
# by devices defined below, while the last one is left
# unused so that one more device can be hotplugged.

[device "pci.1"]
  driver = "ioh3420"
  bus = "pcie.0"
  addr = "0x2"
  port = "0x10"
  chassis = "1"

[device "pci.2"]
  driver = "ioh3420"
  bus = "pcie.0"
  addr = "0x3"
  port = "0x11"
  chassis = "2"

[device "pci.3"]
  driver = "ioh3420"
  bus = "pcie.0"
  addr = "0x4"
  port = "0x12"
  chassis = "3"


# SCSI controller
# =========================================================
#
# We use virtio-scsi here so that we can (hot)plug a large
# number of disks without running into issues. QEMU will
# automatically plug any guest disk into this controller.

[device "scsi"]
  driver = "virtio-scsi-pci"
  bus = "pci.1"
  addr = "0x0"


# Network interface
# =========================================================
#
# We use virtio-net for improved performance over emulated
# hardware; on the host side, we take advantage of user
# networking so that the QEMU process doesn't require any
# additional privileges.

[netdev "hostnet"]
  type = "user"

[device "net"]
  driver = "virtio-net-pci"
  netdev = "hostnet"
  bus = "pci.2"
  addr = "0x0"


# Serial console
# =========================================================
#
# This provides access to the guest via the host's standard
# input / output channel, eg. the guest will behave pretty
# much like any other Unix utility. That includes
# terminating as soon as Ctrl-C is pressed, so caution is
# advised.

[chardev "console"]
  backend = "stdio"

[device "serial"]
  driver = "isa-serial"
  chardev = "console"
