#
# Docker 'host' target (same architecture than the host)
#
# This docker target builds on the debian Stretch base image.
#
# It is intented to build the host architecture, with as much
# features as possible (libraries which are not widely available
# are installed by hand).
#
FROM qemu:debian9
MAINTAINER Philippe Mathieu-Daud√© <f4bug@amsat.org>

RUN DEBIAN_FRONTEND=noninteractive eatmydata \
    apt-get build-dep -yy qemu

RUN DEBIAN_FRONTEND=noninteractive eatmydata \
    apt-get install -y --no-install-recommends \
        libaio-dev \
        libasound2-dev \
        libattr1-dev \
        libbluetooth-dev \
        libbrlapi-dev \
        libbz2-dev \
        libcacard-dev \
        libcap-dev \
        libcap-ng-dev \
        libcapstone-dev \
        libcurl4-gnutls-dev \
        libepoxy-dev \
        libfdt-dev \
        libibverbs-dev \
        libiscsi-dev \
        libjemalloc-dev \
        libjpeg-dev \
        liblttng-ust-dev \
        liblzo2-dev \
        libncursesw5-dev \
        libnfs-dev \
        libnss3-dev \
        libpixman-1-dev \
        libpulse-dev \
        librados-dev \
        librbd-dev \
        librdmacm-dev \
        libseccomp-dev \
        libsnappy-dev \
        libspice-protocol-dev \
        libssh2-1-dev \
        liburcu-dev \
        libusb-1.0-0-dev \
        libusbredirhost-dev \
        libusbredirparser-dev \
        libvdeplug-dev \
        libvte-dev \
        libxen-dev \
        uuid-dev \
        xfslibs-dev

# virgl
RUN DEBIAN_FRONTEND=noninteractive eatmydata \
    apt-get install -y --no-install-recommends \
        libegl1-mesa-dev \
        libepoxy-dev \
        libgbm-dev
RUN git clone git://anongit.freedesktop.org/virglrenderer /usr/src/virglrenderer && \
    cd /usr/src/virglrenderer && ./autogen.sh
RUN cd /usr/src/virglrenderer && \
    CPPFLAGS=-w ./configure --with-glx --disable-tests && \
    make install && \
    ldconfig

# netmap
RUN DEBIAN_FRONTEND=noninteractive eatmydata \
    apt-get install -y --no-install-recommends \
        linux-headers-$(dpkg --print-architecture)
RUN git clone https://github.com/luigirizzo/netmap.git /usr/src/netmap
RUN cd /usr/src/netmap/LINUX && \
    ./configure --no-drivers --no-apps --kernel-dir=$(ls -d /usr/src/linux-headers-*-$(dpkg --print-architecture)) && \
    make install
ENV QEMU_CONFIGURE_OPTS --enable-netmap

# gcrypt
ENV QEMU_CONFIGURE_OPTS $QEMU_CONFIGURE_OPTS --enable-gcrypt
