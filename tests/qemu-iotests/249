#!/usr/bin/env python
#
# Test nbd reconnect
#
# Copyright (c) 2019 Virtuozzo International GmbH. All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

import time

import iotests
from iotests import qemu_img_create, file_path, qemu_nbd_popen, log

disk_a, disk_b, nbd_sock = file_path('disk_a', 'disk_b', 'nbd-sock')

qemu_img_create('-f', iotests.imgfmt, disk_a, '5M')
qemu_img_create('-f', iotests.imgfmt, disk_b, '5M')
srv = qemu_nbd_popen('-k', nbd_sock, '-f', iotests.imgfmt, disk_b)
time.sleep(1)

vm = iotests.VM().add_drive(disk_a)
vm.launch()
vm.hmp_qemu_io('drive0', 'write 0 5M')

vm.qmp_log('blockdev-add', filters=[iotests.filter_qmp_testfiles],
           **{'node_name': 'backup0',
              'driver': 'raw',
              'file': {'driver': 'nbd',
                       'server': {'type': 'unix', 'path': nbd_sock},
                       'reconnect-delay': 10}})
vm.qmp_log('blockdev-backup', device='drive0', sync='full', target='backup0')

time.sleep(1)
log('Kill NBD server')
srv.kill()

jobs = vm.qmp('query-block-jobs')['return']
if jobs and jobs[0]['offset'] < jobs[0]['len']:
    log('Backup job is still in progress')

time.sleep(1)

log('Start NBD server')
srv = qemu_nbd_popen('-k', nbd_sock, '-f', iotests.imgfmt, disk_b)

e = vm.event_wait('BLOCK_JOB_COMPLETED')
log('Backup completed: {}'.format(e['data']['offset']))

vm.qmp_log('blockdev-del', node_name='backup0')
srv.kill()
vm.shutdown()
