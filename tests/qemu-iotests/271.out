QA output created by 271

### Standard write tests (backing file: yes) ###

Formatting 'TEST_DIR/t.IMGFMT.raw', fmt=raw size=1048576
Formatting 'TEST_DIR/t.IMGFMT.backing', fmt=raw size=1048576
Formatting 'TEST_DIR/t.IMGFMT', fmt=IMGFMT size=1048576 backing_file=TEST_DIR/t.IMGFMT.backing
write -q -P 1 0 1k
L2 entry #0: 0x8000000000050000 0000000000000001
write -q -P 2 3k 512
L2 entry #0: 0x8000000000050000 0000000000000003
write -q -P 3 5k 1k
L2 entry #0: 0x8000000000050000 0000000000000007
write -q -P 4 6k 2k
L2 entry #0: 0x8000000000050000 000000000000000f
write -q -P 5 8k 6k
L2 entry #0: 0x8000000000050000 000000000000007f
write -q -P 6 15k 4k
L2 entry #0: 0x8000000000050000 00000000000003ff
write -q -P 7 32k 1k
L2 entry #0: 0x8000000000050000 00000000000103ff
write -q -P 8 63k 4k
L2 entry #0: 0x8000000000050000 00000000800103ff
L2 entry #1: 0x8000000000060000 0000000000000003
write -q -z 2k 2k
L2 entry #0: 0x8000000000050000 00000000800103ff
write -q -z 0 64k
L2 entry #0: 0x8000000000050000 ffffffff00000000
write -q -P 9 0 64k
L2 entry #0: 0x8000000000050000 00000000ffffffff
write -q -z -u 0 32k
L2 entry #0: 0x8000000000050000 00000000ffffffff
write -q -z -u 0 64k
L2 entry #0: 0x0000000000000000 ffffffff00000000
write -q -P 10 3k 512
L2 entry #0: 0x8000000000050000 fffffffd00000002
write -q -P 11 0 64k
L2 entry #0: 0x8000000000050000 00000000ffffffff
discard -q 0 64k
L2 entry #0: 0x0000000000000000 ffffffff00000000
write -q -c -P 12 0 64k
L2 entry #0: 0x4000000000050000 0000000000000000
write -q -P 13 3k 512
L2 entry #0: 0x8000000000070000 00000000ffffffff
write -q -z 128k 64k
L2 entry #2: 0x0000000000000000 ffffffff00000000
write -q -z 192k 32k
L2 entry #3: 0x8000000000050000 000000000000ffff

### Standard write tests (backing file: no) ###

Formatting 'TEST_DIR/t.IMGFMT.raw', fmt=raw size=1048576
Formatting 'TEST_DIR/t.IMGFMT', fmt=IMGFMT size=1048576
write -q -P 1 0 1k
L2 entry #0: 0x8000000000050000 0000000000000001
write -q -P 2 3k 512
L2 entry #0: 0x8000000000050000 0000000000000003
write -q -P 3 5k 1k
L2 entry #0: 0x8000000000050000 0000000000000007
write -q -P 4 6k 2k
L2 entry #0: 0x8000000000050000 000000000000000f
write -q -P 5 8k 6k
L2 entry #0: 0x8000000000050000 000000000000007f
write -q -P 6 15k 4k
L2 entry #0: 0x8000000000050000 00000000000003ff
write -q -P 7 32k 1k
L2 entry #0: 0x8000000000050000 00000000000103ff
write -q -P 8 63k 4k
L2 entry #0: 0x8000000000050000 00000000800103ff
L2 entry #1: 0x8000000000060000 0000000000000003
write -q -z 2k 2k
L2 entry #0: 0x8000000000050000 00000000800103ff
write -q -z 0 64k
L2 entry #0: 0x8000000000050000 ffffffff00000000
write -q -P 9 0 64k
L2 entry #0: 0x8000000000050000 00000000ffffffff
write -q -z -u 0 32k
L2 entry #0: 0x8000000000050000 00000000ffffffff
write -q -z -u 0 64k
L2 entry #0: 0x0000000000000000 ffffffff00000000
write -q -P 10 3k 512
L2 entry #0: 0x8000000000050000 fffffffd00000002
write -q -P 11 0 64k
L2 entry #0: 0x8000000000050000 00000000ffffffff
discard -q 0 64k
L2 entry #0: 0x0000000000000000 ffffffff00000000
write -q -c -P 12 0 64k
L2 entry #0: 0x4000000000050000 0000000000000000
write -q -P 13 3k 512
L2 entry #0: 0x8000000000070000 00000000ffffffff
write -q -z 128k 64k
L2 entry #2: 0x0000000000000000 ffffffff00000000
write -q -z 192k 32k
L2 entry #3: 0x0000000000000000 ffffffff00000000

### Discarding clusters with non-zero bitmaps (backing file: yes) ###

Formatting 'TEST_DIR/t.IMGFMT', fmt=IMGFMT size=1048576 backing_file=TEST_DIR/t.IMGFMT.backing
L2 entry #0: 0x0000000000000000 ffffffff00000000
L2 entry #1: 0x0000000000000000 ffffffff00000000
Image resized.
Image resized.
L2 entry #0: 0x0000000000000000 ffffffff00000000
L2 entry #1: 0x0000000000000000 0000000000000000

### Discarding clusters with non-zero bitmaps (backing file: no) ###

Formatting 'TEST_DIR/t.IMGFMT', fmt=IMGFMT size=1048576
L2 entry #0: 0x0000000000000000 ffffffff00000000
L2 entry #1: 0x0000000000000000 ffffffff00000000
Image resized.
Image resized.
L2 entry #0: 0x0000000000000000 0000ffff00000000
L2 entry #1: 0x0000000000000000 0000000000000000

### Corrupted L2 entries - read test (allocated) ###

# 'cluster is zero' bit set on the standard cluster descriptor

Formatting 'TEST_DIR/t.IMGFMT', fmt=IMGFMT size=1048576
L2 entry #0: 0x8000000000050001 0000000000000001
qcow2: Marking image as corrupt: Invalid cluster entry found  (L2 offset: 0x40000, L2 index: 0); further corruption events will be suppressed
read failed: Input/output error

# Both 'subcluster is zero' and 'subcluster is allocated' bits set

Formatting 'TEST_DIR/t.IMGFMT', fmt=IMGFMT size=1048576
L2 entry #0: 0x8000000000050000 0000000100000001
qcow2: Marking image as corrupt: Invalid cluster entry found  (L2 offset: 0x40000, L2 index: 0); further corruption events will be suppressed
read failed: Input/output error

### Corrupted L2 entries - read test (unallocated) ###

# 'cluster is zero' bit set on the standard cluster descriptor

Formatting 'TEST_DIR/t.IMGFMT', fmt=IMGFMT size=1048576
L2 entry #0: 0x0000000000000001 0000000000000000
qcow2: Marking image as corrupt: Invalid cluster entry found  (L2 offset: 0x40000, L2 index: 0); further corruption events will be suppressed
read failed: Input/output error

# 'subcluster is allocated' bit set

Formatting 'TEST_DIR/t.IMGFMT', fmt=IMGFMT size=1048576
L2 entry #0: 0x0000000000000000 0000000000000001
qcow2: Marking image as corrupt: Invalid cluster entry found  (L2 offset: 0x40000, L2 index: 0); further corruption events will be suppressed
read failed: Input/output error

# Both 'subcluster is zero' and 'subcluster is allocated' bits set

Formatting 'TEST_DIR/t.IMGFMT', fmt=IMGFMT size=1048576
L2 entry #0: 0x0000000000000000 0000000100000001
qcow2: Marking image as corrupt: Invalid cluster entry found  (L2 offset: 0x40000, L2 index: 0); further corruption events will be suppressed
read failed: Input/output error

### Compressed cluster with subcluster bitmap != 0 - read test ###

Formatting 'TEST_DIR/t.IMGFMT', fmt=IMGFMT size=1048576
L2 entry #0: 0x4000000000050000 0000000101000000
read 65536/65536 bytes at offset 0
64 KiB, X ops; XX:XX:XX.X (XXX YYY/sec and XXX ops/sec)

### Corrupted L2 entries - write test (allocated) ###

# 'cluster is zero' bit set on the standard cluster descriptor

Formatting 'TEST_DIR/t.IMGFMT', fmt=IMGFMT size=1048576
L2 entry #0: 0x8000000000050001 0000000000000001
qcow2: Marking image as corrupt: Invalid cluster entry found  (L2 offset: 0x40000, L2 index: 0); further corruption events will be suppressed
write failed: Input/output error

# Both 'subcluster is zero' and 'subcluster is allocated' bits set

Formatting 'TEST_DIR/t.IMGFMT', fmt=IMGFMT size=1048576
L2 entry #0: 0x8000000000050000 0000000100000001
qcow2: Marking image as corrupt: Invalid cluster entry found  (L2 offset: 0x40000, L2 index: 0); further corruption events will be suppressed
write failed: Input/output error

### Corrupted L2 entries - write test (unallocated) ###

# 'cluster is zero' bit set on the standard cluster descriptor

Formatting 'TEST_DIR/t.IMGFMT', fmt=IMGFMT size=1048576
L2 entry #0: 0x0000000000000001 0000000000000000
qcow2: Marking image as corrupt: Invalid cluster entry found  (L2 offset: 0x40000, L2 index: 0); further corruption events will be suppressed
write failed: Input/output error

# 'subcluster is allocated' bit set

Formatting 'TEST_DIR/t.IMGFMT', fmt=IMGFMT size=1048576
L2 entry #0: 0x0000000000000000 0000000000000001
qcow2: Marking image as corrupt: Invalid cluster entry found  (L2 offset: 0x40000, L2 index: 0); further corruption events will be suppressed
write failed: Input/output error

# Both 'subcluster is zero' and 'subcluster is allocated' bits set

Formatting 'TEST_DIR/t.IMGFMT', fmt=IMGFMT size=1048576
L2 entry #0: 0x0000000000000000 0000000100000001
qcow2: Marking image as corrupt: Invalid cluster entry found  (L2 offset: 0x40000, L2 index: 0); further corruption events will be suppressed
write failed: Input/output error

### Compressed cluster with subcluster bitmap != 0 - write test ###

Formatting 'TEST_DIR/t.IMGFMT', fmt=IMGFMT size=1048576
L2 entry #0: 0x4000000000050000 0000000101000000
wrote 65536/65536 bytes at offset 0
64 KiB, X ops; XX:XX:XX.X (XXX YYY/sec and XXX ops/sec)

### Image creation options ###

# cluster_size < 16k
qemu-img: TEST_DIR/t.IMGFMT: Extended L2 entries are only supported with cluster sizes of at least 16384 bytes
Formatting 'TEST_DIR/t.IMGFMT', fmt=IMGFMT size=1048576
# backing file and preallocation=metadata
qemu-img: TEST_DIR/t.IMGFMT: Backing file and preallocation cannot be used at the same time
Formatting 'TEST_DIR/t.IMGFMT', fmt=IMGFMT size=1048576 backing_file=TEST_DIR/t.IMGFMT.backing preallocation=metadata
# backing file and preallocation=falloc
qemu-img: TEST_DIR/t.IMGFMT: Backing file and preallocation cannot be used at the same time
Formatting 'TEST_DIR/t.IMGFMT', fmt=IMGFMT size=1048576 backing_file=TEST_DIR/t.IMGFMT.backing preallocation=falloc
# backing file and preallocation=full
qemu-img: TEST_DIR/t.IMGFMT: Backing file and preallocation cannot be used at the same time
Formatting 'TEST_DIR/t.IMGFMT', fmt=IMGFMT size=1048576 backing_file=TEST_DIR/t.IMGFMT.backing preallocation=full

### qemu-img measure ###

# 512MB, extended_l2=off
required size: 327680
fully allocated size: 537198592
# 512MB, extended_l2=on
required size: 393216
fully allocated size: 537264128
# 16K clusters, 64GB, extended_l2=off
required size: 42008576
fully allocated size: 68761485312
# 16K clusters, 64GB, extended_l2=on
required size: 75579392
fully allocated size: 68795056128
# 8k clusters
qemu-img: Extended L2 entries are only supported with cluster sizes of at least 16384 bytes
# 1024 TB
required size: 309285027840
fully allocated size: 1126209191870464
# 1025 TB
qemu-img: The image size is too large (try using a larger cluster size)
*** done
